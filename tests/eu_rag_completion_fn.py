""" Custom RAG Completion Function for OpenAI Evals
This module defines a custom completion function for evaluating the quality
of responses generated by a Retrieval-Augmented Generation (RAG) system.
It uses OpenAI's API to score the responses based on relevance and completeness."""

from typing import List

from evals.api import CompletionFn, CompletionResult

from euprojectsrag.rag_chain import RAGChain


class RetrievalCompletionResult(CompletionResult):
    """Class for Completion Result."""

    def __init__(self, response: str) -> None:
        self.response = response

    def get_completions(self) -> List[str]:
        return [self.response.strip()]


class EuRAGCompletionFn(CompletionFn):
    """Class for RAG testing"""

    def __init__(self, **kwargs):
        # Initialize your RAG system here using kwargs if necessary
        pass

    def __call__(self, prompt: str, **kwargs) -> CompletionResult:
        # Generate a response using your RAG system
        rag_chain = RAGChain()
        project_name = rag_chain.project_name_extraction(prompt)[0][0]
        response = rag_chain.query_project(prompt, project_name)
        return RetrievalCompletionResult(response)
